{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "CODIGO NORMAL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def generar_productos():\n",
    "    diccionario = {}\n",
    "    print(\"\\n------------BIENVENIDO ADMIN--------------\\n\")\n",
    "    cantidad = int(input(\"- ingrese la cantidad de productos que desea tener su tienda: \\n\"))\n",
    "    for i in range(cantidad):\n",
    "        print(f\"   -ingrese el producto {i+1}:\")\n",
    "        producto = input()\n",
    "        print(f\"   -ingrese el precio del producto {i+1}\")\n",
    "        precio = int(input())\n",
    "        print(f\"   -Ingrese la cantidad disponible del producto {i+1}\")\n",
    "        stock = int(input())\n",
    "        diccionario[producto] = {\"precio\" : precio, \"stock\":stock}\n",
    "    print(\"\\n\")\n",
    "    print(\"-\"*50, \"\\n\")\n",
    "    return diccionario\n",
    "\n",
    "def mostrar_productos(diccionario):\n",
    "    for producto, dato in diccionario.items():\n",
    "        print(producto)\n",
    "        print(f\" -  valor:{dato[\"precio\"]}$\")\n",
    "        print(f\" -  cantidad disponible:{dato[\"stock\"]}\")\n",
    "\n",
    "def generar_venta(diccionario, producto, cantidad):\n",
    "    diccionario[producto][\"precio\"] *= cantidad\n",
    "    diccionario[producto][\"stock\"] -= cantidad\n",
    "    return diccionario\n",
    "\n",
    "def generar_factura(productos, cantidad):\n",
    "    print(\"\\n                               TU FACTURA ES:\")\n",
    "    print(\" \"*20,\"........::::::::::::::::::..........\")\n",
    "    print(\" \"*22,\"- tus productos comprados son:\")\n",
    "    for producto, dato in productos.items():\n",
    "        print(\" \"*22, f\"   - {producto}:{dato[\"precio\"]}\")\n",
    "        total = dato[\"precio\"]*cantidad\n",
    "    print(\" \"*22, f\"   -Total : {total}\")\n",
    "    print(\" \"*20,\"........::::::::::::::::::..........\\n\")\n",
    "\n",
    "def main():\n",
    "    aux = False\n",
    "    while aux == False:\n",
    "        productos = generar_productos()\n",
    "        print(\"-----------BIENVENIDO A SHEIN TU TIENDA DE CONFIANZA-----------\")\n",
    "        print(\"\\nEstos son nuestros productos disponibles\")\n",
    "        mostrar_productos(productos)\n",
    "        print(\"\\n - Cuantos productos desea comprar: \")\n",
    "        select_producto = int(input())\n",
    "        print(\".\"*30)\n",
    "        for i in range(select_producto):\n",
    "            band = False\n",
    "            while band == False:\n",
    "                print(\"Seleccione el producto que desea: \")\n",
    "                producto = input()\n",
    "                if producto in productos:\n",
    "                    band = True\n",
    "            print(\"Cuantos vas a comprar: \")\n",
    "            cantidad_producto_actual = productos[producto][\"stock\"]\n",
    "            cantidad_producto = int(input())\n",
    "            if cantidad_producto > cantidad_producto_actual:\n",
    "                print(\"Ya no hay disponible.\")\n",
    "                cantidad_producto = 0\n",
    "            print(\".\"*30)\n",
    "            generar_venta(productos, producto, cantidad_producto)\n",
    "        generar_factura(productos, cantidad_producto)\n",
    "        print(\"1. para el siguiente cliente\")\n",
    "        print(\"2. Para cerrar el programa\")\n",
    "        select_option = int(input())\n",
    "        if select_option == 1:\n",
    "            aux = False\n",
    "        else:\n",
    "            aux = True\n",
    "            print(\"EL PROGRAMA SE CERRO...\")\n",
    "            print(\"-\"*50)\n",
    "            \n",
    "main()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "CODIGO USANDO POO"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Tienda:\n",
    "    def __init__(self):\n",
    "        self.productos = {}\n",
    "\n",
    "    def registrar_producto(self, producto):\n",
    "        self.productos[producto.nombre] = producto\n",
    "\n",
    "    def actualizar_stock(self, nombre_producto, cantidad):\n",
    "        if nombre_producto in self.productos:\n",
    "            self.productos[nombre_producto].stock -= cantidad\n",
    "            print(f\"Stock de {nombre_producto} actualizado. Nuevo stock: {self.productos[nombre_producto].stock}\")\n",
    "        else:\n",
    "            print(f\"{nombre_producto} no encontrado en la tienda.\")\n",
    "\n",
    "    def calcular_precio_total(self, nombre_producto, cantidad):\n",
    "        if nombre_producto in self.productos:\n",
    "            precio_total = self.productos[nombre_producto].precio * cantidad\n",
    "            print(f\"Precio total de {cantidad} {nombre_producto}(s): ${precio_total}\")\n",
    "        else:\n",
    "            print(f\"{nombre_producto} no encontrado en la tienda.\")\n",
    "\n",
    "    def mostrar_estado_producto(self, nombre_producto):\n",
    "        if nombre_producto in self.productos:\n",
    "            producto = self.productos[nombre_producto]\n",
    "            print(f\"Estado de {nombre_producto}:\")\n",
    "            print(f\"  Precio: ${producto.precio}\")\n",
    "            print(f\"  Stock disponible: {producto.stock}\")\n",
    "        else:\n",
    "            print(f\"{nombre_producto} no encontrado en la tienda.\")\n",
    "\n",
    "class Producto:\n",
    "    def __init__(self, nombre, precio, stock):\n",
    "        self.nombre = nombre\n",
    "        self.precio = precio\n",
    "        self.stock = stock\n",
    "\n",
    "def obtener_producto_usuario():\n",
    "    nombre = input(\"Nombre del producto: \")\n",
    "    precio = float(input(\"Precio del producto: \"))\n",
    "    stock = int(input(\"Cantidad en stock: \"))\n",
    "    return Producto(nombre, precio, stock)\n",
    "\n",
    "def main():\n",
    "    tienda = Tienda()\n",
    "\n",
    "    # Registrar productos iniciales\n",
    "    print(\"Ingrese la informaci칩n de los productos iniciales:\")\n",
    "    for _ in range(2):  # Ejemplo con 2 productos\n",
    "        producto = obtener_producto_usuario()\n",
    "        tienda.registrar_producto(producto)\n",
    "\n",
    "    while True:\n",
    "        print(\"\\nOpciones:\")\n",
    "        print(\"1. Actualizar stock\")\n",
    "        print(\"2. Calcular precio total\")\n",
    "        print(\"3. Mostrar estado del producto\")\n",
    "        print(\"4. Salir\")\n",
    "\n",
    "        opcion = input(\"Seleccione una opci칩n: \")\n",
    "\n",
    "        if opcion == \"1\":\n",
    "            nombre = input(\"Nombre del producto: \")\n",
    "            cantidad = int(input(\"Cantidad vendida: \"))\n",
    "            tienda.actualizar_stock(nombre, cantidad)\n",
    "        elif opcion == \"2\":\n",
    "            nombre = input(\"Nombre del producto: \")\n",
    "            cantidad = int(input(\"Cantidad: \"))\n",
    "            tienda.calcular_precio_total(nombre, cantidad)\n",
    "        elif opcion == \"3\":\n",
    "            nombre = input(\"Nombre del producto: \")\n",
    "            tienda.mostrar_estado_producto(nombre)\n",
    "        elif opcion == \"4\":\n",
    "            break\n",
    "        else:\n",
    "            print(\"Opci칩n no v치lida.\")\n",
    "\n",
    "    print(\"Fin del programa.\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
